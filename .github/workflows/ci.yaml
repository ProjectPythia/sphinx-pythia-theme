# Taken from the sphinx-book-theme repository and modified
name: CI

on:
  push:
    branches: [main]
    tags:
      - '*'
  pull_request:

jobs:

  jupyterbook:
    name: Build Jupyter Book
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    - name: Download references from Sphinx Book Theme
      run: python docs/getreferences.py docs/references
    - name: Build Jupyter Book
      run: jupyter-book build docs

  sphinx:
    name: Build Sphinx Docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    - name: Build Sphinx documentation
      run: sphinx-build -b html docs docs/_build/html

  releasable:
    name: Check if version needs updating
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install local package
        run: pip install -e .
      - name: Check if source version already exists on PyPI
        run: |
          P=sphinx_pythia_theme
          V1=$(pip install ${P}== 2>&1 | head -n1 | rev | cut -d" " -f1 | rev | tr -d ")")
          V2=$(python -c "import ${P} as p; print(p.__version__)")
          is_good=$(python -c "from pkg_resources import parse_version as pv; print(pv('${V2}') > pv('${V1}'))")
          if [ "${is_good}" == "False" ]
          then
            echo "The version of your source is '${V2}'."
            echo "The latest version on PyPI is '${V1}'."
            echo "To release this code, you will need to update your"
            echo "source version to something greater than '${V1}'."
            exit 1
          fi

  publish:
    name: Publish to PyPI
    needs: [jupyterbook, sphinx]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install build dependecies
        run: pip install wheel
      - name: Build package
        run: python setup.py sdist bdist_wheel
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
